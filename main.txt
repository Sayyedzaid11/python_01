   #Introduction To Python
Python is a general purpose, dynamic, high-level, and interpreted programming language. It supports Object Oriented programming approach to develop applications. It is simple and easy to learn and provides lots of high-level data structures.
Python is easy to learn yet powerful and versatile scripting language, which makes it attractive for Application Development.
Python's syntax and dynamic typing with its interpreted nature make it an ideal language for scripting and rapid application development.
 
# Why We Learn Python?
Python provides many useful features to the programmer. These features make it most popular and widely used language. We have listed below few-essential feature of Python.
o	Easy to use and Learn
o	Expressive Language
o	Interpreted Language
o	Object-Oriented Language
o	Open Source Language
o	Extensible
o	Learn Standard Library
o	GUI Programming Support
o	Integrated
o	Embeddable
o	Dynamic Memory Allocation
o	Wide Range of Libraries and Frameworks

#Where Is Python Used:
Python is a general-purpose, popular programming language and it is used in almost every technical field. The various areas of Python use are given below.
o	Data Science
o	Date Mining
o	Desktop Applications
o	Console-based Applications
o	Mobile Applications
o	Software Development
o	Artificial Intelligence
o	Web Applications
o	Enterprise Applications
o	3D CAD Applications
o	Machine Learning
o	Computer Vision or Image Processing Applications.
o	Speech Recognitions
 
#Python Popular Frameworks And Libraries
Python has wide range of libraries and frameworks widely used in various fields such as machine learning, artificial intelligence, web applications, etc. We define some popular frameworks and libraries of Python as follows.
o	Web development (Server-side) - Django Flask, Pyramid, CherryPy
o	GUIs based applications - Tk, PyGTK, PyQt, PyJs, etc.
o	Machine Learning - TensorFlow, PyTorch, Scikit-learn, Matplotlib, Scipy, etc.
o	Mathematics - Numpy, Pandas, etc

#Python Variables
Variable is a name that is used to refer to memory location. Python variable is also known as an identifier and used to hold value.
In Python, we don't need to specify the type of variable because Python is a infer language and smart enough to get variable type.
Variable names can be a group of both the letters and digits, but they have to begin with a letter or an underscore.
It is recommended to use lowercase letters for the variable name. Rahul and rahul both are two different variables.

#Identifier Naming
Variables are the example of identifiers. An Identifier is used to identify the literals used in the program. The rules to name an identifier are given below.
o	The first character of the variable must be an alphabet or underscore ( _ ).
o	All the characters except the first character may be an alphabet of lower-case(a-z), upper-case (A-Z), underscore, or digit (0-9).
o	Identifier name must not contain any white-space, or special character (!, @, #, %, ^, &, *).
o	Identifier name must not be similar to any keyword defined in the language.
o	Identifier names are case sensitive; for example, my name, and MyName is not the same.
o	Examples of valid identifiers: a123, _n, n_9, etc.
o	Examples of invalid identifiers: 1a, n%4, n 9, etc

#Declaring Variable and Assigning Values
Python does not bind us to declare a variable before using it in the application. It allows us to create a variable at the required time.
We don't need to declare explicitly variable in Python. When we assign any value to the variable, that variable is declared automatically.
The equal (=) operator is used to assign value to a variable.

#Data Types
Variables can hold values, and every value has a data-type. Python is a dynamically typed language; hence we do not need to define the type of the variable while declaring it. The interpreter implicitly binds the value with its type.
a = 10
The variable a holds integer value ten and we did not define its type. Python interpreter will automatically interpret variables a as an integer type.
Python enables us to check the type of the variable used in the program. Python provides us the type() function, which returns the type of the variable passed.
